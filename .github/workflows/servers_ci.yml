# This is a basic workflow to help you get started with Actions

name: IO Server 

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        
      - name: Install dependecies
        run: |
          sudo apt-get update
          sudo apt-get install cmake gcc libboost-all-dev libnfc-dev libcurl4 libcurl4-openssl-dev

      # wiringPi not available on non-rpi distributions
      - name: wiringPi-mock
        run: | 
          git clone https://github.com/iwishiwasaneagle/wiringPi-mock
          cd wiringPi-mock
          sudo ./install.sh
          sudo ldconfig # Im at my wits ends

      - name: Install and run iwishiwasaneagle/API_mirror
        run: |
          git clone https://github.com/iwishiwasaneagle/API_mirror --branch main
          cd API_mirror
          npm install
          npm start & 
          echo "api_mirror_pid=$!" >> $GITHUB_ENV


      # Build and run tests
      - name: Build and run io_server
        working-directory: io_server
        run: |
          cmake -S . -B build -DMAKE_TESTING=1
          cmake --build build -j $(nproc)
          cmake --build build --target check
          ./build/io_server -h

      - name: Retrieve pid and check if it exited 
        run: |
          if [ -z "$(ps aux | grep ${{ env.api_mirror_pid }} | grep -v grep)" ]
          then
            echo "No server running. Check logs for crashes.";
            return 1;
          else
            kill -9 ${{ env.api_mirror_pid }}
          fi

